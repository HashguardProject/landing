FROM node:20-alpine AS base

WORKDIR /app

# Install dependencies only when needed
FROM base as deps
RUN apk add --no-cache libc6-compat

COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* ./

RUN if [ -f "yarn.lock" ]; then \
      yarn install --frozen-lockfile; \
    elif [ -f "package-lock.json" ]; then \
      npm ci --legacy-peer-deps; \
    elif [ -f "pnpm-lock.yaml" ]; then \
      corepack enable pnpm && pnpm i --frozen-lockfile; \
    else \
      echo "No lockfile found.  Installing without lockfile (not recommended)." && npm install; \
    fi


# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

RUN yarn build

# Production image, copy all the files and run next
FROM base AS runner
WORKDIR /app

RUN addgroup --system --gid  1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy built assets
COPY --from=builder --chown=nextjs:nodejs /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next ./

USER nextjs

CMD ["npm", "start"] #or ["node", "server.js"] if using a custom server